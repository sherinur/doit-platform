// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: quiz-service/service/frontend/question/v1/question.proto

package quesvc

import (
	v1 "github.com/sherinur/doit-platform/apis/gen/base/frontend/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateQuestionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Text          string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Points        float64                `protobuf:"fixed64,3,opt,name=points,proto3" json:"points,omitempty"`
	QuizId        string                 `protobuf:"bytes,4,opt,name=quiz_id,json=quizId,proto3" json:"quiz_id,omitempty"`
	Answers       []*v1.Answer           `protobuf:"bytes,5,rep,name=answers,proto3" json:"answers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateQuestionRequest) Reset() {
	*x = CreateQuestionRequest{}
	mi := &file_quiz_service_service_frontend_question_v1_question_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateQuestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQuestionRequest) ProtoMessage() {}

func (x *CreateQuestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quiz_service_service_frontend_question_v1_question_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQuestionRequest.ProtoReflect.Descriptor instead.
func (*CreateQuestionRequest) Descriptor() ([]byte, []int) {
	return file_quiz_service_service_frontend_question_v1_question_proto_rawDescGZIP(), []int{0}
}

func (x *CreateQuestionRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *CreateQuestionRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CreateQuestionRequest) GetPoints() float64 {
	if x != nil {
		return x.Points
	}
	return 0
}

func (x *CreateQuestionRequest) GetQuizId() string {
	if x != nil {
		return x.QuizId
	}
	return ""
}

func (x *CreateQuestionRequest) GetAnswers() []*v1.Answer {
	if x != nil {
		return x.Answers
	}
	return nil
}

type CreateQuestionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CreatedId     string                 `protobuf:"bytes,1,opt,name=created_id,json=createdId,proto3" json:"created_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateQuestionResponse) Reset() {
	*x = CreateQuestionResponse{}
	mi := &file_quiz_service_service_frontend_question_v1_question_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateQuestionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQuestionResponse) ProtoMessage() {}

func (x *CreateQuestionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quiz_service_service_frontend_question_v1_question_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQuestionResponse.ProtoReflect.Descriptor instead.
func (*CreateQuestionResponse) Descriptor() ([]byte, []int) {
	return file_quiz_service_service_frontend_question_v1_question_proto_rawDescGZIP(), []int{1}
}

func (x *CreateQuestionResponse) GetCreatedId() string {
	if x != nil {
		return x.CreatedId
	}
	return ""
}

type CreateQuestionRequests struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Questions     []*CreateQuestionRequest `protobuf:"bytes,1,rep,name=questions,proto3" json:"questions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateQuestionRequests) Reset() {
	*x = CreateQuestionRequests{}
	mi := &file_quiz_service_service_frontend_question_v1_question_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateQuestionRequests) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQuestionRequests) ProtoMessage() {}

func (x *CreateQuestionRequests) ProtoReflect() protoreflect.Message {
	mi := &file_quiz_service_service_frontend_question_v1_question_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQuestionRequests.ProtoReflect.Descriptor instead.
func (*CreateQuestionRequests) Descriptor() ([]byte, []int) {
	return file_quiz_service_service_frontend_question_v1_question_proto_rawDescGZIP(), []int{2}
}

func (x *CreateQuestionRequests) GetQuestions() []*CreateQuestionRequest {
	if x != nil {
		return x.Questions
	}
	return nil
}

type CreateQuestionResponses struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Questions     []*CreateQuestionResponse `protobuf:"bytes,1,rep,name=questions,proto3" json:"questions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateQuestionResponses) Reset() {
	*x = CreateQuestionResponses{}
	mi := &file_quiz_service_service_frontend_question_v1_question_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateQuestionResponses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQuestionResponses) ProtoMessage() {}

func (x *CreateQuestionResponses) ProtoReflect() protoreflect.Message {
	mi := &file_quiz_service_service_frontend_question_v1_question_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQuestionResponses.ProtoReflect.Descriptor instead.
func (*CreateQuestionResponses) Descriptor() ([]byte, []int) {
	return file_quiz_service_service_frontend_question_v1_question_proto_rawDescGZIP(), []int{3}
}

func (x *CreateQuestionResponses) GetQuestions() []*CreateQuestionResponse {
	if x != nil {
		return x.Questions
	}
	return nil
}

type GetQuestionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetQuestionRequest) Reset() {
	*x = GetQuestionRequest{}
	mi := &file_quiz_service_service_frontend_question_v1_question_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQuestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuestionRequest) ProtoMessage() {}

func (x *GetQuestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quiz_service_service_frontend_question_v1_question_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuestionRequest.ProtoReflect.Descriptor instead.
func (*GetQuestionRequest) Descriptor() ([]byte, []int) {
	return file_quiz_service_service_frontend_question_v1_question_proto_rawDescGZIP(), []int{4}
}

func (x *GetQuestionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetAnswerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Text          string                 `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAnswerResponse) Reset() {
	*x = GetAnswerResponse{}
	mi := &file_quiz_service_service_frontend_question_v1_question_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAnswerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAnswerResponse) ProtoMessage() {}

func (x *GetAnswerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quiz_service_service_frontend_question_v1_question_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAnswerResponse.ProtoReflect.Descriptor instead.
func (*GetAnswerResponse) Descriptor() ([]byte, []int) {
	return file_quiz_service_service_frontend_question_v1_question_proto_rawDescGZIP(), []int{5}
}

func (x *GetAnswerResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetAnswerResponse) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type GetQuestionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Text          string                 `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Points        float64                `protobuf:"fixed64,4,opt,name=points,proto3" json:"points,omitempty"`
	QuizId        string                 `protobuf:"bytes,5,opt,name=quiz_id,json=quizId,proto3" json:"quiz_id,omitempty"`
	Answers       []*GetAnswerResponse   `protobuf:"bytes,6,rep,name=answers,proto3" json:"answers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetQuestionResponse) Reset() {
	*x = GetQuestionResponse{}
	mi := &file_quiz_service_service_frontend_question_v1_question_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQuestionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuestionResponse) ProtoMessage() {}

func (x *GetQuestionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quiz_service_service_frontend_question_v1_question_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuestionResponse.ProtoReflect.Descriptor instead.
func (*GetQuestionResponse) Descriptor() ([]byte, []int) {
	return file_quiz_service_service_frontend_question_v1_question_proto_rawDescGZIP(), []int{6}
}

func (x *GetQuestionResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetQuestionResponse) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *GetQuestionResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetQuestionResponse) GetPoints() float64 {
	if x != nil {
		return x.Points
	}
	return 0
}

func (x *GetQuestionResponse) GetQuizId() string {
	if x != nil {
		return x.QuizId
	}
	return ""
}

func (x *GetQuestionResponse) GetAnswers() []*GetAnswerResponse {
	if x != nil {
		return x.Answers
	}
	return nil
}

type GetQuestionResponses struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Questions     []*GetQuestionResponse `protobuf:"bytes,1,rep,name=questions,proto3" json:"questions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetQuestionResponses) Reset() {
	*x = GetQuestionResponses{}
	mi := &file_quiz_service_service_frontend_question_v1_question_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQuestionResponses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuestionResponses) ProtoMessage() {}

func (x *GetQuestionResponses) ProtoReflect() protoreflect.Message {
	mi := &file_quiz_service_service_frontend_question_v1_question_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuestionResponses.ProtoReflect.Descriptor instead.
func (*GetQuestionResponses) Descriptor() ([]byte, []int) {
	return file_quiz_service_service_frontend_question_v1_question_proto_rawDescGZIP(), []int{7}
}

func (x *GetQuestionResponses) GetQuestions() []*GetQuestionResponse {
	if x != nil {
		return x.Questions
	}
	return nil
}

type UpdateQuestionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Question      *v1.Question           `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateQuestionRequest) Reset() {
	*x = UpdateQuestionRequest{}
	mi := &file_quiz_service_service_frontend_question_v1_question_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateQuestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateQuestionRequest) ProtoMessage() {}

func (x *UpdateQuestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quiz_service_service_frontend_question_v1_question_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateQuestionRequest.ProtoReflect.Descriptor instead.
func (*UpdateQuestionRequest) Descriptor() ([]byte, []int) {
	return file_quiz_service_service_frontend_question_v1_question_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateQuestionRequest) GetQuestion() *v1.Question {
	if x != nil {
		return x.Question
	}
	return nil
}

type UpdateQuestionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UpdatedId     string                 `protobuf:"bytes,1,opt,name=updated_id,json=updatedId,proto3" json:"updated_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateQuestionResponse) Reset() {
	*x = UpdateQuestionResponse{}
	mi := &file_quiz_service_service_frontend_question_v1_question_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateQuestionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateQuestionResponse) ProtoMessage() {}

func (x *UpdateQuestionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quiz_service_service_frontend_question_v1_question_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateQuestionResponse.ProtoReflect.Descriptor instead.
func (*UpdateQuestionResponse) Descriptor() ([]byte, []int) {
	return file_quiz_service_service_frontend_question_v1_question_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateQuestionResponse) GetUpdatedId() string {
	if x != nil {
		return x.UpdatedId
	}
	return ""
}

type DeleteQuestionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteQuestionRequest) Reset() {
	*x = DeleteQuestionRequest{}
	mi := &file_quiz_service_service_frontend_question_v1_question_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteQuestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteQuestionRequest) ProtoMessage() {}

func (x *DeleteQuestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quiz_service_service_frontend_question_v1_question_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteQuestionRequest.ProtoReflect.Descriptor instead.
func (*DeleteQuestionRequest) Descriptor() ([]byte, []int) {
	return file_quiz_service_service_frontend_question_v1_question_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteQuestionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteQuestionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeletedId     string                 `protobuf:"bytes,1,opt,name=deleted_id,json=deletedId,proto3" json:"deleted_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteQuestionResponse) Reset() {
	*x = DeleteQuestionResponse{}
	mi := &file_quiz_service_service_frontend_question_v1_question_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteQuestionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteQuestionResponse) ProtoMessage() {}

func (x *DeleteQuestionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quiz_service_service_frontend_question_v1_question_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteQuestionResponse.ProtoReflect.Descriptor instead.
func (*DeleteQuestionResponse) Descriptor() ([]byte, []int) {
	return file_quiz_service_service_frontend_question_v1_question_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteQuestionResponse) GetDeletedId() string {
	if x != nil {
		return x.DeletedId
	}
	return ""
}

var File_quiz_service_service_frontend_question_v1_question_proto protoreflect.FileDescriptor

const file_quiz_service_service_frontend_question_v1_question_proto_rawDesc = "" +
	"\n" +
	"8quiz-service/service/frontend/question/v1/question.proto\x12!quiz.service.frontend.question.v1\x1a\x1fbase/frontend/v1/question.proto\"\xa4\x01\n" +
	"\x15CreateQuestionRequest\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x16\n" +
	"\x06points\x18\x03 \x01(\x01R\x06points\x12\x17\n" +
	"\aquiz_id\x18\x04 \x01(\tR\x06quizId\x122\n" +
	"\aanswers\x18\x05 \x03(\v2\x18.base.frontend.v1.AnswerR\aanswers\"7\n" +
	"\x16CreateQuestionResponse\x12\x1d\n" +
	"\n" +
	"created_id\x18\x01 \x01(\tR\tcreatedId\"p\n" +
	"\x16CreateQuestionRequests\x12V\n" +
	"\tquestions\x18\x01 \x03(\v28.quiz.service.frontend.question.v1.CreateQuestionRequestR\tquestions\"r\n" +
	"\x17CreateQuestionResponses\x12W\n" +
	"\tquestions\x18\x01 \x03(\v29.quiz.service.frontend.question.v1.CreateQuestionResponseR\tquestions\"$\n" +
	"\x12GetQuestionRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"7\n" +
	"\x11GetAnswerResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\"\xce\x01\n" +
	"\x13GetQuestionResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x16\n" +
	"\x06points\x18\x04 \x01(\x01R\x06points\x12\x17\n" +
	"\aquiz_id\x18\x05 \x01(\tR\x06quizId\x12N\n" +
	"\aanswers\x18\x06 \x03(\v24.quiz.service.frontend.question.v1.GetAnswerResponseR\aanswers\"l\n" +
	"\x14GetQuestionResponses\x12T\n" +
	"\tquestions\x18\x01 \x03(\v26.quiz.service.frontend.question.v1.GetQuestionResponseR\tquestions\"O\n" +
	"\x15UpdateQuestionRequest\x126\n" +
	"\bquestion\x18\x01 \x01(\v2\x1a.base.frontend.v1.QuestionR\bquestion\"7\n" +
	"\x16UpdateQuestionResponse\x12\x1d\n" +
	"\n" +
	"updated_id\x18\x01 \x01(\tR\tupdatedId\"'\n" +
	"\x15DeleteQuestionRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"7\n" +
	"\x16DeleteQuestionResponse\x12\x1d\n" +
	"\n" +
	"deleted_id\x18\x01 \x01(\tR\tdeletedId2\xc0\x06\n" +
	"\x0fQuestionService\x12\x85\x01\n" +
	"\x0eCreateQuestion\x128.quiz.service.frontend.question.v1.CreateQuestionRequest\x1a9.quiz.service.frontend.question.v1.CreateQuestionResponse\x12\x88\x01\n" +
	"\x0fCreateQuestions\x129.quiz.service.frontend.question.v1.CreateQuestionRequests\x1a:.quiz.service.frontend.question.v1.CreateQuestionResponses\x12\x80\x01\n" +
	"\x0fGetQuestionById\x125.quiz.service.frontend.question.v1.GetQuestionRequest\x1a6.quiz.service.frontend.question.v1.GetQuestionResponse\x12\x86\x01\n" +
	"\x14GetQuestionsByQuizId\x125.quiz.service.frontend.question.v1.GetQuestionRequest\x1a7.quiz.service.frontend.question.v1.GetQuestionResponses\x12\x85\x01\n" +
	"\x0eUpdateQuestion\x128.quiz.service.frontend.question.v1.UpdateQuestionRequest\x1a9.quiz.service.frontend.question.v1.UpdateQuestionResponse\x12\x85\x01\n" +
	"\x0eDeleteQuestion\x128.quiz.service.frontend.question.v1.DeleteQuestionRequest\x1a9.quiz.service.frontend.question.v1.DeleteQuestionResponseB]Z[github.com/sherinur/doit-platform/apis/gen/quiz-service/service/frontend/question/v1;quesvcb\x06proto3"

var (
	file_quiz_service_service_frontend_question_v1_question_proto_rawDescOnce sync.Once
	file_quiz_service_service_frontend_question_v1_question_proto_rawDescData []byte
)

func file_quiz_service_service_frontend_question_v1_question_proto_rawDescGZIP() []byte {
	file_quiz_service_service_frontend_question_v1_question_proto_rawDescOnce.Do(func() {
		file_quiz_service_service_frontend_question_v1_question_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_quiz_service_service_frontend_question_v1_question_proto_rawDesc), len(file_quiz_service_service_frontend_question_v1_question_proto_rawDesc)))
	})
	return file_quiz_service_service_frontend_question_v1_question_proto_rawDescData
}

var file_quiz_service_service_frontend_question_v1_question_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_quiz_service_service_frontend_question_v1_question_proto_goTypes = []any{
	(*CreateQuestionRequest)(nil),   // 0: quiz.service.frontend.question.v1.CreateQuestionRequest
	(*CreateQuestionResponse)(nil),  // 1: quiz.service.frontend.question.v1.CreateQuestionResponse
	(*CreateQuestionRequests)(nil),  // 2: quiz.service.frontend.question.v1.CreateQuestionRequests
	(*CreateQuestionResponses)(nil), // 3: quiz.service.frontend.question.v1.CreateQuestionResponses
	(*GetQuestionRequest)(nil),      // 4: quiz.service.frontend.question.v1.GetQuestionRequest
	(*GetAnswerResponse)(nil),       // 5: quiz.service.frontend.question.v1.GetAnswerResponse
	(*GetQuestionResponse)(nil),     // 6: quiz.service.frontend.question.v1.GetQuestionResponse
	(*GetQuestionResponses)(nil),    // 7: quiz.service.frontend.question.v1.GetQuestionResponses
	(*UpdateQuestionRequest)(nil),   // 8: quiz.service.frontend.question.v1.UpdateQuestionRequest
	(*UpdateQuestionResponse)(nil),  // 9: quiz.service.frontend.question.v1.UpdateQuestionResponse
	(*DeleteQuestionRequest)(nil),   // 10: quiz.service.frontend.question.v1.DeleteQuestionRequest
	(*DeleteQuestionResponse)(nil),  // 11: quiz.service.frontend.question.v1.DeleteQuestionResponse
	(*v1.Answer)(nil),               // 12: base.frontend.v1.Answer
	(*v1.Question)(nil),             // 13: base.frontend.v1.Question
}
var file_quiz_service_service_frontend_question_v1_question_proto_depIdxs = []int32{
	12, // 0: quiz.service.frontend.question.v1.CreateQuestionRequest.answers:type_name -> base.frontend.v1.Answer
	0,  // 1: quiz.service.frontend.question.v1.CreateQuestionRequests.questions:type_name -> quiz.service.frontend.question.v1.CreateQuestionRequest
	1,  // 2: quiz.service.frontend.question.v1.CreateQuestionResponses.questions:type_name -> quiz.service.frontend.question.v1.CreateQuestionResponse
	5,  // 3: quiz.service.frontend.question.v1.GetQuestionResponse.answers:type_name -> quiz.service.frontend.question.v1.GetAnswerResponse
	6,  // 4: quiz.service.frontend.question.v1.GetQuestionResponses.questions:type_name -> quiz.service.frontend.question.v1.GetQuestionResponse
	13, // 5: quiz.service.frontend.question.v1.UpdateQuestionRequest.question:type_name -> base.frontend.v1.Question
	0,  // 6: quiz.service.frontend.question.v1.QuestionService.CreateQuestion:input_type -> quiz.service.frontend.question.v1.CreateQuestionRequest
	2,  // 7: quiz.service.frontend.question.v1.QuestionService.CreateQuestions:input_type -> quiz.service.frontend.question.v1.CreateQuestionRequests
	4,  // 8: quiz.service.frontend.question.v1.QuestionService.GetQuestionById:input_type -> quiz.service.frontend.question.v1.GetQuestionRequest
	4,  // 9: quiz.service.frontend.question.v1.QuestionService.GetQuestionsByQuizId:input_type -> quiz.service.frontend.question.v1.GetQuestionRequest
	8,  // 10: quiz.service.frontend.question.v1.QuestionService.UpdateQuestion:input_type -> quiz.service.frontend.question.v1.UpdateQuestionRequest
	10, // 11: quiz.service.frontend.question.v1.QuestionService.DeleteQuestion:input_type -> quiz.service.frontend.question.v1.DeleteQuestionRequest
	1,  // 12: quiz.service.frontend.question.v1.QuestionService.CreateQuestion:output_type -> quiz.service.frontend.question.v1.CreateQuestionResponse
	3,  // 13: quiz.service.frontend.question.v1.QuestionService.CreateQuestions:output_type -> quiz.service.frontend.question.v1.CreateQuestionResponses
	6,  // 14: quiz.service.frontend.question.v1.QuestionService.GetQuestionById:output_type -> quiz.service.frontend.question.v1.GetQuestionResponse
	7,  // 15: quiz.service.frontend.question.v1.QuestionService.GetQuestionsByQuizId:output_type -> quiz.service.frontend.question.v1.GetQuestionResponses
	9,  // 16: quiz.service.frontend.question.v1.QuestionService.UpdateQuestion:output_type -> quiz.service.frontend.question.v1.UpdateQuestionResponse
	11, // 17: quiz.service.frontend.question.v1.QuestionService.DeleteQuestion:output_type -> quiz.service.frontend.question.v1.DeleteQuestionResponse
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_quiz_service_service_frontend_question_v1_question_proto_init() }
func file_quiz_service_service_frontend_question_v1_question_proto_init() {
	if File_quiz_service_service_frontend_question_v1_question_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_quiz_service_service_frontend_question_v1_question_proto_rawDesc), len(file_quiz_service_service_frontend_question_v1_question_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_quiz_service_service_frontend_question_v1_question_proto_goTypes,
		DependencyIndexes: file_quiz_service_service_frontend_question_v1_question_proto_depIdxs,
		MessageInfos:      file_quiz_service_service_frontend_question_v1_question_proto_msgTypes,
	}.Build()
	File_quiz_service_service_frontend_question_v1_question_proto = out.File
	file_quiz_service_service_frontend_question_v1_question_proto_goTypes = nil
	file_quiz_service_service_frontend_question_v1_question_proto_depIdxs = nil
}
